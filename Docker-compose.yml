version: "3.8"

services:
  reverse-proxy:
    image: traefik:v2.10
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.email=alotaishanab@gmail.com
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --api.insecure=true
    # If Traefik v2.9+, you can also do Docker labels instead of commands.

  backend:
    image: alotaishanab/ellanatek-backend:latest
    container_name: my_backend
    # Not exposing to host directly anymoreâ€”only inside Docker network
    expose:
      - "5004"
    # or ports: ["5004:5004"] if you still want direct access
    labels:
      - "traefik.enable=false"
      # If you want to route requests to /api => your backend,
      # you'd set up a label for traefik. This is optional.

  frontend:
    image: alotaishanab/ellanatek-frontend:latest
    container_name: my_frontend
    expose:
      - "80" 
    # We won't do "80:80" on the host if Traefik is the main entry
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`admotionsa.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      # An optional HTTP->HTTPS redirect can be done by another router on 'web' entrypoint
